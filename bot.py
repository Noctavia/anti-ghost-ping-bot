import discord
from discord.ext import commands
import json

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix='n?', intents=intents)

# Base de donn√©es simple
try:
    with open('config.json', 'r') as f:
        config = json.load(f)
except FileNotFoundError:
    config = {"enabled": True, "whitelist": [], "redirect_channel": None}

# Sauvegarder la configuration
def save_config():
    with open('config.json', 'w') as f:
        json.dump(config, f, indent=4)

# --- ANTI-GHOST PING ---
@bot.event
async def on_ready():
    print(f'‚úÖ Connect√© en tant que {bot.user}')

@bot.event
async def on_message_delete(message):
    if not config["enabled"] or message.author.bot:
        return

    if message.mentions and message.author.id not in config["whitelist"]:
        mentions = ", ".join(user.mention for user in message.mentions)
        embed = discord.Embed(
            title="üö® Anti-Ghost Ping üö®",
            description=f"**Auteur :** {message.author.mention}\n"
                        f"**Mentions :** {mentions}\n"
                        f"**Message supprim√© :** {message.content or '*Aucun contenu*'}",
            color=discord.Color.red()
        )
        embed.set_footer(text="D√©tect√© par l'anti-ghost ping")

        channel = message.guild.get_channel(config["redirect_channel"]) if config["redirect_channel"] else message.channel
        await channel.send(embed=embed)

# --- COMMANDES ---

# 1Ô∏è‚É£ Commande INFO
@bot.command()
async def info(ctx):
    status = "‚úÖ **Activ√©**" if config["enabled"] else "‚ùå **D√©sactiv√©**"
    redirect = f"<#{config['redirect_channel']}>" if config["redirect_channel"] else "Pas d√©fini"

    embed = discord.Embed(
        title="‚ÑπÔ∏è Informations sur l'Anti-Ghost Ping",
        color=discord.Color.blue()
    )
    embed.add_field(name="Statut", value=status, inline=False)
    embed.add_field(name="Canal de redirection", value=redirect, inline=False)
    embed.add_field(name="Utilisateurs whitelist√©s", value=str(len(config["whitelist"])), inline=False)
    embed.set_footer(text="Utilisez ?help pour voir toutes les commandes.")

    await ctx.send(embed=embed)

# 2Ô∏è‚É£ Commande MENTIONS REDIRECT
@bot.command()
@commands.has_permissions(administrator=True)
async def mentions_redirect(ctx, channel: discord.TextChannel):
    config["redirect_channel"] = channel.id
    save_config()

    embed = discord.Embed(
        title="‚úÖ Redirection des mentions mise √† jour",
        description=f"Les alertes seront d√©sormais envoy√©es dans {channel.mention}.",
        color=discord.Color.green()
    )
    await ctx.send(embed=embed)

# 3Ô∏è‚É£ Commande WHITELIST ADD
@bot.command()
@commands.has_permissions(administrator=True)
async def whitelist_add(ctx, user: discord.User):
    if user.id in config["whitelist"]:
        embed = discord.Embed(
            title="‚ö†Ô∏è D√©j√† whitelist√©",
            description=f"{user.mention} est d√©j√† dans la whitelist.",
            color=discord.Color.orange()
        )
    else:
        config["whitelist"].append(user.id)
        save_config()
        embed = discord.Embed(
            title="‚úÖ Ajout√© √† la whitelist",
            description=f"{user.mention} a √©t√© ajout√© √† la whitelist.",
            color=discord.Color.green()
        )
    await ctx.send(embed=embed)

# 4Ô∏è‚É£ Commande WHITELIST REMOVE
@bot.command()
@commands.has_permissions(administrator=True)
async def whitelist_remove(ctx, user: discord.User):
    if user.id not in config["whitelist"]:
        embed = discord.Embed(
            title="‚ùå Non whitelist√©",
            description=f"{user.mention} n'est pas dans la whitelist.",
            color=discord.Color.red()
        )
    else:
        config["whitelist"].remove(user.id)
        save_config()
        embed = discord.Embed(
            title="‚úÖ Retir√© de la whitelist",
            description=f"{user.mention} a √©t√© retir√© de la whitelist.",
            color=discord.Color.green()
        )
    await ctx.send(embed=embed)

# 5Ô∏è‚É£ Commande WHITELIST LIST
@bot.command()
async def whitelist_list(ctx):
    if not config["whitelist"]:
        embed = discord.Embed(
            title="üìã Whitelist",
            description="Aucun utilisateur n'est whitelist√©.",
            color=discord.Color.dark_gray()
        )
    else:
        whitelist_mentions = [f"<@{user_id}>" for user_id in config["whitelist"]]
        embed = discord.Embed(
            title="üìã Liste des utilisateurs whitelist√©s",
            description="\n".join(whitelist_mentions),
            color=discord.Color.blue()
        )
    await ctx.send(embed=embed)

# 6Ô∏è‚É£ Commande ETOGGLE
@bot.command()
@commands.has_permissions(administrator=True)
async def etoggle(ctx):
    config["enabled"] = not config["enabled"]
    save_config()

    status = "‚úÖ **Activ√©**" if config["enabled"] else "‚ùå **D√©sactiv√©**"
    embed = discord.Embed(
        title="‚öôÔ∏è Statut de l'Anti-Ghost Ping mis √† jour",
        description=f"L'anti-ghost ping est maintenant : {status}",
        color=discord.Color.green() if config["enabled"] else discord.Color.red()
    )
    await ctx.send(embed=embed)

# 7Ô∏è‚É£ Commande HELP
@bot.command()
async def aide(ctx):
    embed = discord.Embed(
        title="üìñ Aide - Commandes disponibles",
        description="Voici la liste des commandes disponibles :",
        color=discord.Color.purple()
    )
    embed.add_field(name="`n?info`", value="Affiche les informations sur l'anti-ghost ping.", inline=False)
    embed.add_field(name="`n?mentions_redirect #canal`", value="Redirige les alertes de ghost ping vers un canal sp√©cifique.", inline=False)
    embed.add_field(name="`n?whitelist add @utilisateur`", value="Ajoute un utilisateur √† la whitelist.", inline=False)
    embed.add_field(name="`n?whitelist remove @utilisateur`", value="Supprime un utilisateur de la whitelist.", inline=False)
    embed.add_field(name="`n?whitelist list`", value="Affiche la liste des utilisateurs whitelist√©s.", inline=False)
    embed.add_field(name="`n?etoggle`", value="Active ou d√©sactive l'anti-ghost ping.", inline=False)
    embed.set_footer(text="D√©tect√© par l'anti-ghost ping | Cr√©√© par ton bot pr√©f√©r√© ü§ñ")

    await ctx.send(embed=embed)

# Gestion des erreurs
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(
            title="üö´ Permission refus√©e",
            description="Vous n'avez pas la permission d'utiliser cette commande.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
    elif isinstance(error, commands.MissingRequiredArgument):
        embed = discord.Embed(
            title="‚ö†Ô∏è Argument manquant",
            description="Veuillez fournir tous les arguments n√©cessaires.",
            color=discord.Color.orange()
        )
        await ctx.send(embed=embed)
    elif isinstance(error, commands.CommandNotFound):
        pass  # Ignore les commandes inconnues
    else:
        raise error

bot.run('VOTRE_TOKEN')
